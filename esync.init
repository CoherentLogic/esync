#!/bin/bash -
#
# Package:       esync
# File:          esyncd
# Summary:       init script for the esync daemon
# Maintainer:    David Wicksell
# Last Modified: Sep 5, 2014
#
# Written by David Wicksell <dlw@linux.com>
# Copyright Â© 2010-2014 Fourth Watch Software, LC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License (AGPL)
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# This script is written to be run in a Red Hat environment
# Tweaks maybe needed for other distributions
#
# chkconfig: 2345 96 04
# description: Start and stop the esync daemon
#
### BEGIN INIT INFO
# Provides:          Environment synchronization for a VistA system
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop the esync daemon
# Description:       Start and stop the esync daemon
### END INIT INFO
#
# Do NOT "set -e"
#


# Source function library
source /etc/rc.d/init.d/functions


PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
PROGRAM=esyncd
NAME=`basename $0 | sed 's/.*-\(.*\)/\1/'` # E.g. S15esync-vistap


if [ "${NAME}" = "esyncd" ]
then
  echo "You cannot call /etc/init.d/esyncd directly"
  echo "You need to call one of the links that point to it"

  exit 1
fi


SCRIPT=esyncd-${NAME}
SCRIPTNAME=/etc/init.d/${SCRIPT}
SYNC_HOST=`su - ${NAME} -c 'echo ${gtm_repl_instsecondary}'`
PID_FILE=/var/run/${PROGRAM}-${NAME}.pid
RETVAL=0


# Grab all the directories that should be synced from a VistA environment
function find_dirs {
  routines=`su - ${NAME} -c 'echo ${gtmroutines}'`
  count=0

  for dir in ${routines}
  do
    count=`expr ${count} + 1`

    # At this point, we are only syncing the first 3 directories in the path
    if [ ${count} -eq 4 ]
    then
      break
    fi

    DIRS="${DIRS} `echo ${dir} | cut -d '(' -f 2 | cut -d ')' -f 1`"
  done
}


function start() {
  echo -n $"Starting ${PROGRAM} for ${NAME}: "
    
  #find_dirs #DLW - Need to rework this
  DIRS="/home/${NAME}/p /home/${NAME}/s /home/${NAME}/r /home/${NAME}/w /home/${NAME}/ewdapps /home/${NAME}/node /home/${NAME}/www /home/${NAME}/q /home/${NAME}/CCR /home/${NAME}/clinicalsummary /home/${NAME}/doc"
  RS_ARGS="-h ${SYNC_HOST} -u ${NAME} ${DIRS}"

  daemon --pidfile ${PID_FILE} ${PROGRAM} "${RS_ARGS}"

  RETVAL=$?

  echo

  # Look at the functions in /etc/rc.d/init.d/functions 
  # to determine if there is a better function for locking
  touch /var/lock/subsys/${PROGRAM}-${NAME}
    
  return ${RETVAL}
}


function stop() {
  echo -n $"Stopping ${PROGRAM} for ${NAME}: "
    
  killproc -p ${PID_FILE} ${PROGRAM}

  RETVAL=$?
   
  echo

  rm -f /var/lock/subsys/${PROGRAM}-${NAME}

  return ${RETVAL}
}


case "$1" in 
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status -p ${PID_FILE} ${SCRIPT}

    RETVAL=$?
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status}"

    RETVAL=1
esac

exit ${RETVAL}
